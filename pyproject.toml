[tool.poetry]
name = "ssa"
version = "0.1.0"
description = ""
authors = ["PAL <info@predictive-analytics-lab.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
hydra-submitit-launcher = {version = "^1.1.1", allow-prereleases = true}
numpy = "^1.21.1"
pandas = "^1.3.1"
conduit = {git = "https://github.com/predictive-analytics-lab/conduit.git", rev = "e029b50aeb3b0f65a557e199557093154a44ede1"}
pytorch-lightning = "^1.4.1, != 1.4.5"
sklearn = "^0.0"
tqdm = "^4.62.0"
wandb = "^0.12.0"
gpytorch = "^1.5.0"
numba = "^0.53.1"
transforms3d = "^0.3.1"
opencv-python = "^4.5.3"
transformers = "^4.9.2"
polars = "^0.10.3"
ranzen = "^1.0.0"

[tool.poetry.dev-dependencies]
black = "^21.7b0"
mypy = "^0.910"
pydocstyle = "^6.1.1"
pylint = "^2.9.6"
pytest = "^6.2.4"
pytest-cov = "^2.12.1"
pre-commit = "^2.14.0"
python-type-stubs = {git = "https://github.com/predictive-analytics-lab/python-type-stubs.git", branch = "main" }
pyarrow = "^5.0.0"


[tool.poetry.scripts]
gogo = "ssa.main:launcher"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 100
target-version = ['py38']
skip-string-normalization = false
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
known_third_party = ["absl", "conduit", "cv2", "google", "gpytorch", "hydra", "matplotlib", "numba", "numpy", "omegaconf", "pandas", "polars", "pytest", "pytorch_lightning", "ranzen", "sklearn", "tensorflow", "torch", "torchmetrics", "tqdm", "transformers", "transforms3d", "wandb"]
known_future_library = []
extra_standard_library = ["dataclasses", "__future__", "typing_extensions"]
line_length = 88
profile = "black"
force_sort_within_sections = "True"
classes = ["MISSING"]

[tool.pyright]
include = ["ssa"]
exclude = ["**/node_modules", "**/__pycache__"]
typeCheckingMode = "basic"
pythonVersion = "3.7"
reportUnusedImport = "error"
reportDuplicateImport  = "error"
reportIncompatibleVariableOverride = "error"
reportOverlappingOverload = "error"
reportUntypedNamedTuple = "error"
reportConstantRedefinition = "warning"
reportMissingImports = "error"
reportMissingTypeStubs = "warning"
strictListInference = true
strictSetInference = true
strictParameterNoneValue = true

[tool.mypy]
python_version = "3.8"
no_implicit_optional = true
allow_redefinition = true
strict_equality = true
check_untyped_defs = true
warn_unreachable = true
disallow_any_unimported = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
show_error_codes = true
warn_unused_ignores = false
exclude = "hydra/"

[[tool.mypy.overrides]]
module = [
    "absl.*",
    "cv2.*",
    "gpytorch.*",
    "numba.*",
    "pandas.*",
    "pytest.*",
    "sklearn.*",
    "tqdm.*",
    "transformers.*",
    "transforms3d.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = []
follow_imports = "skip"
follow_imports_for_stubs = true
